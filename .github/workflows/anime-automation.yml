name: Automatisation Anime

on:
  # schedule:
  #   - cron: "0 14,22 * * *" # 14h et 22h UTC
  workflow_dispatch:

jobs:
  anime-automation:
    runs-on: windows-latest
    timeout-minutes: 120

    env:
      # Cloudinary
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

      # Telegram
      TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}

      # Email
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      RESEND_TO: ${{ secrets.RESEND_TO }}

      # Releases
      RELEASE_BIN_URL: "https://github.com/Strong-Ari/anime-automation/releases/download/v1.0-binaire/Faster-Whisper-XXL_r245.4_windows.7z"
      RELEASE_MODEL_URL_001: "https://github.com/Strong-Ari/anime-automation/releases/download/v1.0-model/Faster-Whisper-XXL_r245.4_windows.7z.001"
      RELEASE_MODEL_URL_002: "https://github.com/Strong-Ari/anime-automation/releases/download/v1.0-model/Faster-Whisper-XXL_r245.4_windows.7z.002"

    steps:
      - name: üîç Inventaire outils pr√©-install√©s
        run: |
          Write-Host "=== Chocolatey packages ==="
          choco list

          Write-Host "=== Versions languages ==="
          node --version
          python --version
          git --version

          Write-Host "=== Outils syst√®me ==="
          Get-Command 7z -ErrorAction SilentlyContinue
          Get-Command ffmpeg -ErrorAction SilentlyContinue
          Get-Command aria2c -ErrorAction SilentlyContinue

      - name: üì¶ Checkout du code
        uses: actions/checkout@v4

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: üì¶ Installation des d√©pendances (avec legacy-peer-deps)
        run: npm ci --legacy-peer-deps

      # === Installation FFmpeg avec cache ===
      - name: üé¨ Cache FFmpeg
        uses: actions/cache@v4
        id: cache-ffmpeg
        with:
          path: |
            C:\ProgramData\chocolatey\lib\ffmpeg
            C:\ProgramData\chocolatey\bin\ffmpeg.exe
            C:\ProgramData\chocolatey\bin\ffprobe.exe
          key: ffmpeg-${{ runner.os }}-v2
          restore-keys: |
            ffmpeg-${{ runner.os }}-

      - name: üì¶ Installer FFmpeg
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        run: |
          Write-Host "üîΩ Installation de FFmpeg..."
          choco install ffmpeg -y --no-progress
          Write-Host "‚úÖ FFmpeg install√© avec succ√®s"

      - name: üß™ V√©rifier installation FFmpeg
        run: |
          Write-Host "=== Test FFmpeg ==="
          ffmpeg -version | Select-String "ffmpeg version" | Select-Object -First 1
          ffprobe -version | Select-String "ffprobe version" | Select-Object -First 1

          Write-Host "=== Chemins FFmpeg ==="
          Get-Command ffmpeg | Select-Object Source
          Get-Command ffprobe | Select-Object Source

          Write-Host "‚úÖ FFmpeg op√©rationnel !"

      # === Installation aria2 avec cache ===
      - name: ‚ö° Cache aria2
        uses: actions/cache@v4
        id: cache-aria2
        with:
          path: |
            C:\ProgramData\chocolatey\lib\aria2
            C:\ProgramData\chocolatey\bin\aria2c.exe
          key: aria2-${{ runner.os }}-v2
          restore-keys: |
            aria2-${{ runner.os }}-

      - name: üì¶ Installer aria2
        if: steps.cache-aria2.outputs.cache-hit != 'true'
        run: |
          Write-Host "üîΩ Installation de aria2..."
          choco install aria2 -y --no-progress
          Write-Host "‚úÖ aria2 install√© avec succ√®s"

      - name: üß™ V√©rifier installation aria2
        run: |
          Write-Host "=== Test aria2 ==="
          aria2c --version | Select-String "aria2 version" | Select-Object -First 1

          Write-Host "=== Chemin aria2 ==="
          Get-Command aria2c | Select-Object Source

          Write-Host "‚úÖ aria2 op√©rationnel !"

      # === V√©rification 7z ===
      - name: üóúÔ∏è V√©rifier installation 7z
        run: |
          Write-Host "=== Test 7z ==="
          7z | Select-String "7-Zip" | Select-Object -First 1

          Write-Host "=== Chemin 7z ==="
          Get-Command 7z | Select-Object Source

          Write-Host "‚úÖ 7z op√©rationnel !"

      # === T√©l√©chargement & extraction Release Binaire ===
      - name: üíæ Cache Faster-Whisper Binaire
        uses: actions/cache@v4
        id: cache-binaire
        with:
          path: models/Faster-Whisper-XXL_r245.4_windows
          key: fw-binaire-${{ runner.os }}-v2

      - name: ‚¨áÔ∏è T√©l√©charger & extraire Binaire
        if: steps.cache-binaire.outputs.cache-hit != 'true'
        run: |
          Write-Host "üìÅ Cr√©ation du dossier models..."
          New-Item -ItemType Directory -Path models -Force

          Write-Host "‚¨áÔ∏è T√©l√©chargement du binaire..."
          aria2c -x 16 -s 16 -d models -o Faster-Whisper-XXL_r245.4_windows.7z ${{ env.RELEASE_BIN_URL }}

          Write-Host "üì¶ Extraction du binaire..."
          7z x models\Faster-Whisper-XXL_r245.4_windows.7z -omodels -y

          Write-Host "‚úÖ Binaire extrait avec succ√®s"

      # === T√©l√©chargement & extraction Release Mod√®le scind√©e ===
      - name: üíæ Cache Faster-Whisper Mod√®le
        uses: actions/cache@v4
        id: cache-modele
        with:
          path: models/Faster-Whisper-XXL_r245.4_windows
          key: fw-modele-${{ runner.os }}-v2

      - name: ‚¨áÔ∏è T√©l√©charger & extraire Mod√®le (2 parties)
        if: steps.cache-modele.outputs.cache-hit != 'true'
        run: |
          Write-Host "‚¨áÔ∏è T√©l√©chargement partie 1..."
          $download1Success = $false
          try {
            aria2c -x 16 -s 16 -d models -o Faster-Whisper-XXL_r245.4_windows.7z.001 "${{ env.RELEASE_MODEL_URL_001 }}"
            if ($LASTEXITCODE -eq 0 -and (Test-Path "models\Faster-Whisper-XXL_r245.4_windows.7z.001")) {
              $download1Success = $true
              Write-Host "‚úÖ Partie 1 t√©l√©charg√©e"
            } else {
              Write-Host "‚ùå √âchec t√©l√©chargement partie 1 (code: $LASTEXITCODE)"
            }
          } catch {
            Write-Host "‚ùå Erreur t√©l√©chargement partie 1: $($_.Exception.Message)"
          }

          Write-Host "‚¨áÔ∏è T√©l√©chargement partie 2..."
          $download2Success = $false
          try {
            aria2c -x 16 -s 16 -d models -o Faster-Whisper-XXL_r245.4_windows.7z.002 "${{ env.RELEASE_MODEL_URL_002 }}"
            if ($LASTEXITCODE -eq 0 -and (Test-Path "models\Faster-Whisper-XXL_r245.4_windows.7z.002")) {
              $download2Success = $true
              Write-Host "‚úÖ Partie 2 t√©l√©charg√©e"
            } else {
              Write-Host "‚ùå √âchec t√©l√©chargement partie 2 (code: $LASTEXITCODE)"
            }
          } catch {
            Write-Host "‚ùå Erreur t√©l√©chargement partie 2: $($_.Exception.Message)"
          }

          if ($download1Success -and $download2Success) {
            Write-Host "üì¶ Extraction du mod√®le multi-parties..."
            try {
              7z x models\Faster-Whisper-XXL_r245.4_windows.7z.001 -omodels -y
              if ($LASTEXITCODE -eq 0) {
                Write-Host "‚úÖ Mod√®le extrait avec succ√®s"
              } else {
                Write-Host "‚ùå √âchec de l'extraction (code: $LASTEXITCODE)"
                exit 1
              }
            } catch {
              Write-Host "‚ùå Erreur lors de l'extraction: $($_.Exception.Message)"
              exit 1
            }
          } else {
            Write-Host "‚ö†Ô∏è T√©l√©chargement du mod√®le √©chou√©, continuons sans ce fichier..."
            Write-Host "V√©rifiez que les fichiers existent dans votre release GitHub"
          }

      # === Pipeline vid√©o ===
      - name: üéµ √âtape 1 - T√©l√©chargement voix al√©atoire
        run: npm run start

      - name: üé¨ √âtape 2 - S√©lection des clips anime
        run: npm run select-clips

      - name: üîó √âtape 3 - Concat√©nation clips avec transitions
        run: npm run concat-clips

      - name: ‚ú® √âtape 4 - Application effets TikTok
        run: npm run ffmpeg-tiktok-effects

      - name: üéµ √âtape 5 - T√©l√©chargement OST al√©atoire
        run: npm run download-random-ost

      - name: üìù √âtape 6 - G√©n√©ration des sous-titres
        run: npm run generate-subs

      - name: üßπ √âtape 7 - Nettoyage des sous-titres
        run: npm run clean-subs

      - name: ‚úçÔ∏è √âtape 8 - G√©n√©ration drawtext
        run: npm run generate-drawtext

      - name: üìñ √âtape 9 - Ajout des sous-titres
        run: npm run add-subtitles

      - name: üîä √âtape 10 - Mixage audio
        run: npm run mix-audio

      # # === Upload & publication ===
      # - name: ‚òÅÔ∏è Upload Cloudinary
      #   run: npm run upload-to-cloudinary

      # - name: üì± Publication TikTok
      #   run: npm run put-to-tiktok
      #   env:
      #     CHROMIUM_FLAGS: "--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-gpu --disable-web-security --disable-features=VizDisplayCompositor"

      # === Artifacts ===
      - name: üíæ Sauvegarde vid√©o finale
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: anime-video-${{ github.run_number }}
          path: |
            output.mp4
            output_video.mp4
            output_pre_final.mp4
            output_final.mp4
          retention-days: 7

      - name: üíæ Sauvegarde JSON
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: json-public-subs
          path: |
            public/*.json
            subs/*.json
          retention-days: 7

      - name: üíæ Sauvegarde logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: logs-${{ github.run_number }}
          path: |
            *.log
            logs/
          retention-days: 3

      - name: üì¢ Notifier Telegram (succ√®s ou √©chec)
        if: always()
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ job.status == 'success' && '‚úÖ' || '‚ùå' }} Automatisation Anim√© termin√©e !
            Statut: ${{ job.status }}
            Workflow: ${{ github.workflow }}
            Job: ${{ github.job }}
            Commit: ${{ github.sha }}
            Auteur: ${{ github.actor }}
            Lien: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: üìß Envoyer mail stylis√© React Email + Tailwind via Resend
        if: always()
        run: npm run send-email
        env:
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          RESEND_TO: ${{ secrets.RESEND_TO }}
          STATUS: ${{ job.status }}
          STATUS_EMOJI: ${{ job.status == 'success' && 'üéâ' || 'üí•' }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_RUN_ID: ${{ github.run_id }}

      # === Nettoyage ===
      - name: üßπ Nettoyage fichiers temporaires
        if: always()
        run: |
          if (Test-Path temp) { Remove-Item -Recurse -Force temp }
          if (Test-Path cache) { Remove-Item -Recurse -Force cache }
          Get-ChildItem -Recurse -Include *.tmp, *.temp -ErrorAction SilentlyContinue | Remove-Item -Force
